{"version":3,"sources":["settings.js","utils/color.js","theme.js","components/ExampleBox.js","components/ExampleLogin.js","components/ExampleDashboard.js","components/ColorTile.js","App.js","serviceWorker.js","index.js"],"names":["defaultSettings","colors","neutral","primary","secondary","highlight","accent","getSettings","settings","localStorage","getItem","JSON","parse","shadeSteps","getNamedShades","name","color","scale","base","chroma","baseL","get","lightBase","set","darkBase","domain","baseDomain","Math","round","shades","mode","map","step","hex","getShades","reduce","namedShades","shade","index","getContrastTextColor","darkText","lightText","contrast","baseTheme","breakpoints","space","sizes","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","text","background","muted","grey","fontFamily","lineHeight","fontWeight","links","nav","px","py","display","alignItems","bg","shadows","radii","small","rounded","circle","buttons","styles","root","h1","variant","fontSize","h2","h3","h4","h5","h6","pre","overflowX","code","table","width","borderCollapse","borderSpacing","th","textAlign","borderBottomStyle","td","buildTheme","baseColors","Object","entries","forEach","colorChoices","neutral95","neutral0","neutral5","primary60","secondary60","highlight10","neutral50","accent60","ExampleBox","props","sx","borderRadius","boxShadow","marginBottom","backgroundColor","overflow","padding","borderBottomWidth","borderBottomColor","darken","justifyContent","height","marginRight","lighten","as","title","children","ExampleLogin","p","onSubmit","e","preventDefault","mb","htmlFor","id","type","ExampleDashboard","flexDirection","href","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","mt","ColorTile","cursor","value","onChange","App","setSettings","setItem","stringify","newTheme","setState","theme","updateColor","debounce","key","cloneDeep","state","debouncedUpdateColor","event","target","this","gap","mr","flexGrow","updateColors","rows","readonly","onClick","resetTheme","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8474ac0.chunk.js","sourcesContent":["const defaultSettings = {\n  colors: {\n    neutral: '#777777',\n    primary: '#0077cc',\n    secondary: '#3300cc',\n    highlight: '#efeffe',\n    accent: '#660099',\n  },\n}\n\nconst STORAGE_NAME = 'SETTINGS'\n\nexport function getSettings() {\n  const settings = localStorage.getItem(STORAGE_NAME)\n  return settings ? JSON.parse(settings) : defaultSettings\n}\n\nexport function setSettings(settings) {\n  localStorage.setItem(STORAGE_NAME, JSON.stringify(settings))\n}\n","import chroma from 'chroma-js'\n\nconst shadeSteps = [0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 85, 90, 95, 100]\n\nexport function getShades(color) {\n  const base = chroma(color)\n  const baseL = base.get('hsl.l')\n\n  const lightL = 0.97\n  const darkL = 0.14\n\n  const lightBase = base.set('hsl.l', lightL)\n  const darkBase = base.set('hsl.l', darkL)\n\n  let scale\n  if (baseL >= lightL) {\n    scale = chroma.scale([base, darkBase]).domain([0, 100])\n  } else if (baseL <= darkL) {\n    scale = chroma.scale([lightBase, base]).domain([0, 100])\n  } else {\n    const baseDomain = 100 - Math.round(baseL * 10) * 10\n    scale = chroma\n      .scale([lightBase, base, darkBase])\n      .domain([0, baseDomain, 100])\n  }\n\n  const shades = scale.mode('hsl')\n  // .correctLightness()\n  // .classes(shadeSteps)\n\n  return shadeSteps.map((step) => shades(step).hex())\n}\n\nexport function getNamedShades(name, color) {\n  const shades = getShades(color)\n  return shades.reduce((namedShades, shade, index) => {\n    namedShades[`${name}${shadeSteps[index]}`] = shade\n    return namedShades\n  }, {})\n}\n\nexport function getContrastTextColor(color, darkText, lightText) {\n  return chroma.contrast(color, darkText) > 5 ? darkText : lightText\n}\n","import { getSettings } from './settings'\nimport { getNamedShades } from './utils/color'\n\nconst baseTheme = {\n  breakpoints: ['40em', '52em', '64em'],\n  space: [0, 4, 8, 16, 24, 32, 48, 64, 128, 256, 512],\n  sizes: [12, 16, 20, 24, 32, 48, 64, 128, 256, 480, 640, 800, 1024],\n  fonts: {\n    body:\n      'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", sans-serif',\n    heading: 'inherit',\n    monospace: 'Menlo, monospace',\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700,\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.125,\n  },\n  colors: {\n    text: '#000000',\n    background: '#ffffff',\n    primary: '#0077cc',\n    secondary: '#3300cc',\n    muted: '#f6f6f6',\n    highlight: '#efeffe',\n    grey: '#777777',\n    accent: '#660099',\n  },\n  text: {\n    heading: {\n      fontFamily: 'heading',\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n    },\n  },\n  links: {\n    nav: {\n      color: 'text',\n      px: 2,\n      py: 2,\n      display: 'flex',\n      alignItems: 'center',\n      '&:hover': {\n        bg: 'highlight',\n      },\n    },\n  },\n  shadows: [\n    '0 1px 2px 0 rgba(0,0,0,0.3)',\n    '0 1px 2px 0 rgba(0,0,0,0.1), 0 1px 4px 0 rgba(0,0,0,0.2)',\n    '0 1px 2px 0 rgba(0,0,0,0.1), 0 3px 8px 0 rgba(0,0,0,0.2)',\n    '0 1px 2px 0 rgba(0,0,0,0.1), 0 4px 12px 0 rgba(0,0,0,0.2)',\n  ],\n  radii: {\n    small: '4px',\n    rounded: '2em',\n    circle: '50%',\n  },\n  buttons: {\n    primary: {\n      color: 'background',\n      bg: 'primary',\n    },\n    muted: {\n      color: 'text',\n      bg: 'background',\n    },\n  },\n  styles: {\n    root: {\n      fontFamily: 'body',\n      lineHeight: 'body',\n      fontWeight: 'body',\n    },\n    h1: {\n      variant: 'text.heading',\n      fontSize: 5,\n    },\n    h2: {\n      variant: 'text.heading',\n      fontSize: 4,\n    },\n    h3: {\n      variant: 'text.heading',\n      fontSize: 3,\n    },\n    h4: {\n      variant: 'text.heading',\n      fontSize: 2,\n    },\n    h5: {\n      variant: 'text.heading',\n      fontSize: 1,\n    },\n    h6: {\n      variant: 'text.heading',\n      fontSize: 0,\n    },\n    pre: {\n      fontFamily: 'monospace',\n      overflowX: 'auto',\n      code: {\n        color: 'inherit',\n      },\n    },\n    code: {\n      fontFamily: 'monospace',\n      fontSize: 'inherit',\n    },\n    table: {\n      width: '100%',\n      borderCollapse: 'separate',\n      borderSpacing: 0,\n    },\n    th: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n    td: {\n      textAlign: 'left',\n      borderBottomStyle: 'solid',\n    },\n  },\n}\n\nexport function buildTheme() {\n  const settings = getSettings()\n  let baseColors = {}\n\n  Object.entries(settings.colors).forEach(([name, color]) => {\n    const shades = getNamedShades(name, color)\n    baseColors = {\n      ...baseColors,\n      ...shades,\n    }\n  })\n\n  const colorChoices = {\n    text: baseColors.neutral95,\n    background: baseColors.neutral0,\n    muted: baseColors.neutral5,\n    primary: baseColors.primary60,\n    secondary: baseColors.secondary60,\n    highlight: baseColors.highlight10,\n    grey: baseColors.neutral50,\n    accent: baseColors.accent60,\n  }\n\n  const colors = {\n    ...baseColors,\n    ...colorChoices,\n  }\n\n  return {\n    ...baseTheme,\n    colors,\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { darken, lighten } from '@theme-ui/color'\nimport { Box, Flex, Heading } from 'theme-ui'\n\nfunction ExampleBox(props) {\n  return (\n    <Box\n      sx={{\n        borderRadius: 'small',\n        boxShadow: 3,\n        marginBottom: 6,\n        backgroundColor: 'background',\n        overflow: 'hidden',\n      }}\n    >\n      <Flex\n        sx={{\n          padding: 3,\n          borderBottomWidth: 1,\n          backgroundColor: 'muted',\n          borderBottomColor: darken('muted', 0.075),\n          borderBottomStyle: 'solid',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Flex>\n          <Box\n            sx={{\n              width: 0,\n              height: 0,\n              marginRight: 2,\n              borderRadius: 'circle',\n              backgroundColor: darken('grey', 0.2),\n            }}\n          />\n          <Box\n            sx={{\n              width: 0,\n              height: 0,\n              marginRight: 2,\n              borderRadius: 'circle',\n              backgroundColor: lighten('grey', 0.2),\n            }}\n          />\n          <Box\n            sx={{\n              width: 0,\n              height: 0,\n              borderRadius: 'circle',\n              backgroundColor: lighten('grey', 0.2),\n            }}\n          />\n        </Flex>\n        <Heading as=\"h3\" sx={{ fontSize: 0, fontWeight: 'normal' }}>\n          Example: <strong>{props.title}</strong>\n        </Heading>\n      </Flex>\n      <Box>{props.children}</Box>\n    </Box>\n  )\n}\n\nexport default ExampleBox\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Box, Label, Input, Button, Flex, Heading, Checkbox } from 'theme-ui'\n\nfunction ExampleLogin() {\n  return (\n    <Flex\n      sx={{ justifyContent: 'center', alignItems: 'center', height: 10 }}\n      p={6}\n    >\n      <Box\n        as=\"form\"\n        onSubmit={(e) => e.preventDefault()}\n        sx={{\n          width: 9,\n          boxShadow: 3,\n          borderRadius: 'small',\n        }}\n        p={6}\n        bg=\"background\"\n      >\n        <Heading as=\"h1\" mb={3}>\n          Welcome Back\n        </Heading>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input name=\"username\" id=\"username\" mb={3} />\n        <Label htmlFor=\"password\">Password</Label>\n        <Input type=\"password\" name=\"password\" id=\"password\" mb={3} />\n        <Box>\n          <Label mb={3}>\n            <Checkbox />\n            Remember me\n          </Label>\n        </Box>\n        <Button sx={{ width: '100%' }}>Login</Button>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default ExampleLogin\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Box, NavLink, Button, Flex, Heading } from 'theme-ui'\n\nfunction ExampleDashboard() {\n  return (\n    <Flex sx={{ height: 10 }}>\n      <Flex\n        sx={{ flexDirection: 'column', backgroundColor: 'muted' }}\n        p={1}\n        as=\"nav\"\n      >\n        <NavLink href=\"#!\">\n          <svg\n            sx={{ width: 3 }}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\"></path>\n          </svg>\n        </NavLink>\n        <NavLink href=\"#!\">\n          <svg\n            sx={{ width: 3 }}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n          </svg>\n        </NavLink>\n        <NavLink href=\"#!\">\n          <svg\n            sx={{ width: 3 }}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"></path>\n            <path d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n          </svg>\n        </NavLink>\n        <NavLink href=\"#!\" mt=\"auto\">\n          <svg\n            sx={{ width: 3 }}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </NavLink>\n      </Flex>\n      <Box p={1}></Box>\n    </Flex>\n  )\n}\n\nexport default ExampleDashboard\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { Flex, Box, Text } from 'theme-ui'\nimport { getNamedShades } from '../utils/color'\nimport { getContrastTextColor } from '../utils/color'\n\nfunction ColorTile(props) {\n  const shades = getNamedShades(props.name, props.color)\n  const darkText = shades[`${props.name}100`]\n  const lightText = shades[`${props.name}0`]\n\n  return (\n    <Flex\n      sx={{\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Box mb={2}>\n        <input\n          sx={{\n            borderRadius: 'small',\n            boxShadow: 1,\n            width: 7,\n            height: 7,\n            marginBottom: 2,\n            cursor: 'pointer',\n          }}\n          type=\"color\"\n          value={props.color}\n          onChange={props.onChange}\n        />\n        <Box px={2}>\n          <Text>\n            <strong>{props.name}</strong>\n          </Text>\n          <Text>{props.color}</Text>\n        </Box>\n      </Box>\n      <Box>\n        {Object.entries(shades).map(([name, color]) => (\n          <Box\n            sx={{\n              backgroundColor: color,\n              width: 7,\n              color: getContrastTextColor(color, darkText, lightText),\n            }}\n            px={2}\n            py={1}\n          >\n            <Text>{name}</Text>\n            <Text>{color}</Text>\n          </Box>\n        ))}\n      </Box>\n    </Flex>\n  )\n}\n\nexport default ColorTile\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport React from 'react'\nimport {\n  ThemeProvider,\n  Grid,\n  Flex,\n  Box,\n  Text,\n  Link,\n  Textarea,\n  Button,\n} from 'theme-ui'\nimport { buildTheme } from './theme'\nimport { getSettings, setSettings } from './settings'\nimport ExampleBox from './components/ExampleBox'\nimport ExampleLogin from './components/ExampleLogin'\nimport ExampleDashboard from './components/ExampleDashboard'\nimport ColorTile from './components/ColorTile'\nimport { debounce, cloneDeep } from 'lodash'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      settings: getSettings(),\n      theme: buildTheme(),\n    }\n  }\n\n  setSettings = (settings) => {\n    setSettings(settings)\n    const newTheme = buildTheme()\n    this.setState({\n      settings,\n      theme: newTheme,\n    })\n  }\n\n  // resetTheme = () => {\n  //   this.setTheme(defaultTheme)\n  // }\n\n  updateColor = debounce((key, value) => {\n    const colors = cloneDeep(this.state.settings.colors)\n    colors[key] = value\n    this.setSettings({\n      colors,\n    })\n  }, 200)\n\n  debouncedUpdateColor = (key) => (event) => {\n    this.updateColor(key, event.target.value)\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={this.state.theme}>\n        <Box p={4}>\n          <Box mb={6}>\n            <Text mb={2} as=\"h1\">\n              UI Color Palette Generator\n            </Text>\n            <Text mb={4} as=\"p\">\n              Create and preview accessible color palettes. Export them to{' '}\n              <Link href=\"https://theme-ui.com/\" target=\"_blank\">\n                Theme UI\n              </Link>{' '}\n              and every library following the same{' '}\n              <Link href=\"https://theme-ui.com/theme-spec/\" target=\"_blank\">\n                specification\n              </Link>\n              .\n            </Text>\n            <Flex>\n              <Grid\n                gap={4}\n                width={[128, 128, 128]}\n                mr={6}\n                sx={{\n                  flexGrow: 1,\n                }}\n              >\n                {Object.entries(this.state.settings.colors).map(\n                  ([key, value], index) => (\n                    <ColorTile\n                      key={index}\n                      color={value}\n                      name={key}\n                      onChange={this.debouncedUpdateColor(key)}\n                    ></ColorTile>\n                  )\n                )}\n              </Grid>\n              <Box sx={{ width: 8, borderRadius: 'small' }} p={3} bg=\"muted\">\n                <form onSubmit={this.updateColors}>\n                  <Textarea\n                    rows={11}\n                    value={JSON.stringify(this.state.theme.colors, null, 2)}\n                    readonly\n                    bg=\"muted\"\n                    mb=\"3\"\n                    sx={{ backgroundColor: 'background' }}\n                  />\n                  <Button sx={{ width: '100%' }} mb={2}>\n                    Copy Theme\n                  </Button>\n                </form>\n                <Button\n                  variant=\"muted\"\n                  sx={{ width: '100%' }}\n                  onClick={this.resetTheme}\n                >\n                  Reset Theme\n                </Button>\n              </Box>\n            </Flex>\n          </Box>\n          <ExampleBox title=\"Dashboard\">\n            <ExampleDashboard />\n          </ExampleBox>\n          <ExampleBox title=\"Login Form\">\n            <ExampleLogin />\n          </ExampleBox>\n        </Box>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}